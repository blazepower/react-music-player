{"version":3,"sources":["components/Song.tsx","components/Player.tsx","util.ts","components/LibrarySong.tsx","components/Library.tsx","data.ts","components/Nav.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Song","currSong","className","src","cover","alt","name","artist","Player","isPlaying","setIsPlaying","audioRef","songInfo","setSongInfo","songs","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","newSongs","map","s","id","active","skipTrackHandler","skipDirection","a","currIndex","findIndex","song","length","play","getTime","time","Math","floor","slice","trackAnimation","transform","animationPercent","currentTime","style","background","color","min","max","duration","value","type","onChange","event","target","icon","faAngleLeft","size","onClick","faPause","faPlay","pause","faAngleRight","setCurrentSongActive","LibrarySong","songSelectHandler","Library","isLibraryOpen","chillHop","audio","uuidv4","Nav","setLibraryOpen","faMusic","App","useRef","timeUpdateHandler","roundedCurrentTime","round","roundedDuration","songEndHandler","currentSong","current","useState","setIsLibraryOpen","onTimeUpdate","ref","onLoadedMetadata","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c45a12e4.chunk.js","sourcesContent":["import React from 'react';\r\nimport { SongProps } from \"../types\";\r\n\r\nconst Song = ({ currSong }: SongProps) => {\r\n    return (\r\n        <div className={\"song-container\"}>\r\n            <img src={currSong.cover} alt={\"album cover\"}/>\r\n            <h2>{currSong.name}</h2>\r\n            <h3>{currSong.artist}</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Song;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleLeft, faAngleRight, faPause, faPlay } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { PlayerProps, SongModel } from \"../types\";\r\n\r\nconst Player = ({ currSong, isPlaying, setIsPlaying, audioRef, songInfo, setSongInfo, songs, setCurrentSong, setSongs }: PlayerProps) => {\r\n\r\n    const playSongHandler = () => {\r\n        if (isPlaying) {\r\n            audioRef.pause();\r\n            setIsPlaying(!isPlaying);\r\n        } else {\r\n            setIsPlaying(!isPlaying);\r\n            audioRef.play();\r\n        }\r\n    };\r\n\r\n    const activeLibraryHandler = (nextPrev: SongModel) => {\r\n        const newSongs = songs.map(s => {\r\n            if (s.id === nextPrev.id) {\r\n                return {\r\n                    ...s,\r\n                    active: true,\r\n                };\r\n            } else {\r\n                return {\r\n                    ...s,\r\n                    active: false\r\n                };\r\n            }\r\n        });\r\n        setSongs(newSongs);\r\n    };\r\n\r\n    const skipTrackHandler = async (skipDirection: string) => {\r\n        let currIndex = songs.findIndex(song => song.id === currSong.id);\r\n        switch (skipDirection) {\r\n            case 'skip-back':\r\n                if (currIndex === 0) {\r\n                    await setCurrentSong(songs[songs.length - 1]);\r\n                    activeLibraryHandler(songs[songs.length - 1]);\r\n                    break;\r\n                }\r\n                await setCurrentSong(songs[--currIndex]);\r\n                activeLibraryHandler(songs[--currIndex]);\r\n                break;\r\n            default:\r\n                await setCurrentSong(songs[(currIndex + 1) % songs.length]);\r\n                activeLibraryHandler(songs[(currIndex + 1) % songs.length]);\r\n                break;\r\n        }\r\n        if (isPlaying)\r\n            await audioRef.play();\r\n    };\r\n\r\n    const dragHandler = (event: any) => {\r\n        audioRef.currentTime = event.target.value;\r\n        setSongInfo({ ...songInfo, currentTime: event.target.value });\r\n    };\r\n\r\n    const getTime = (time: number): string => {\r\n        return (\r\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n        );\r\n    };\r\n\r\n    const trackAnimation = {\r\n        transform: `translateX(${songInfo.animationPercent}%)`\r\n    };\r\n\r\n    return (\r\n        <div className={\"player\"}>\r\n            <div className={\"time-control\"}>\r\n                <p>{getTime(songInfo.currentTime)}</p>\r\n                <div className={\"track\"} style={{ background: `linear-gradient(to right, ${currSong.color[0]}, ${currSong.color[1]}` }}>\r\n                    <input min={0} max={songInfo.duration || 0} value={songInfo.currentTime} type={\"range\"} onChange={dragHandler}/>\r\n                    <div className={\"animate-track\"} style={trackAnimation}/>\r\n                </div>\r\n                <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n            </div>\r\n            <div className={\"play-control\"}>\r\n                <FontAwesomeIcon icon={faAngleLeft} className={\"back\"} size={\"2x\"} onClick={() => skipTrackHandler('skip-back')}/>\r\n                <FontAwesomeIcon icon={isPlaying ? faPause : faPlay} className={\"play\"} size={\"2x\"} onClick={playSongHandler}/>\r\n                <FontAwesomeIcon icon={faAngleRight} className={\"forward\"} size={\"2x\"} onClick={() => skipTrackHandler('skip-forward')}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Player;\r\n","import { SongModel } from \"./types\";\r\n\r\nexport function setCurrentSongActive(song: SongModel, songs: SongModel[], setSongs: Function): void {\r\n    const newSongs = songs.map(s => {\r\n        if (s.id === song.id) {\r\n            return {\r\n                ...s,\r\n                active: true,\r\n            };\r\n        } else {\r\n            return {\r\n                ...s,\r\n                active: false\r\n            };\r\n        }\r\n    });\r\n    setSongs(newSongs);\r\n}\r\n","import React from \"react\";\r\nimport { LibrarySongProps } from \"../types\";\r\nimport { setCurrentSongActive } from \"../util\";\r\n\r\nconst LibrarySong = ({ song, songs, setCurrentSong, audioRef, isPlaying, setSongs }: LibrarySongProps) => {\r\n\r\n    const songSelectHandler = async () => {\r\n        await setCurrentSong(song);\r\n\r\n        setCurrentSongActive(song, songs, setSongs);\r\n        if (isPlaying) {\r\n            await audioRef.play();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`library-song ${song.active ? 'selected' : \"\"}`} onClick={songSelectHandler}>\r\n            <img src={song.cover} alt={\"album cover\"}/>\r\n            <div className={\"song-description\"}>\r\n                <h3>{song.name}</h3>\r\n                <h4>{song.artist}</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\nimport { LibraryProps } from \"../types\";\r\n\r\nconst Library = ({ songs, setCurrentSong, audioRef, isPlaying, setSongs, isLibraryOpen}: LibraryProps) => {\r\n    return (\r\n        <div className={`library ${isLibraryOpen ? 'active-library': \"\"}`}>\r\n            <h2>Library</h2>\r\n            <div>\r\n                {songs.map(song => <LibrarySong song={song} setCurrentSong={setCurrentSong} songs={songs} key={song.id} audioRef={audioRef} isPlaying={isPlaying} setSongs={setSongs}/>)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Library;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\n\r\nfunction chillHop() {\r\n    return [\r\n        {\r\n            name: \"Beaver Creek\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n            artist: \"Aso, Middle School, Aviino\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n            color: [\"#205950\", \"#2ab3bf\"],\r\n            id: uuidv4(),\r\n            active: true,\r\n        },\r\n        {\r\n            name: \"Daylight\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n            artist: \"Aiguille\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n            color: [\"#EF8EA9\", \"#ab417f\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Keep Going\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n            artist: \"Swørn\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n            color: [\"#CD607D\", \"#c94043\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Nightfall\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n            artist: \"Aiguille\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n            color: [\"#EF8EA9\", \"#ab417f\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Reflection\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n            artist: \"Swørn\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n            color: [\"#CD607D\", \"#c94043\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Under the City Stars\",\r\n            cover:\r\n                \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n            artist: \"Aso, Middle School, Aviino\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n            color: [\"#205950\", \"#2ab3bf\"],\r\n            id: uuidv4(),\r\n            active: false,\r\n        },\r\n        //ADD MORE HERE\r\n    ];\r\n}\r\n\r\nexport default chillHop;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { NavProps } from \"../types\";\r\n\r\nconst Nav = ({isLibraryOpen, setLibraryOpen}: NavProps) => {\r\n    return (\r\n        <nav>\r\n            <h1>Rishik Music Player</h1>\r\n            <button onClick={() => setLibraryOpen(!isLibraryOpen)}>\r\n                Library\r\n                <FontAwesomeIcon icon={faMusic}/>\r\n            </button>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useRef, useState } from 'react';\r\nimport './styles/app.scss';\r\nimport Song from \"./components/Song\";\r\nimport Player from \"./components/Player\";\r\nimport Library from \"./components/Library\";\r\nimport chillHop from \"./data\";\r\nimport { SongInfo, SongModel } from \"./types\";\r\nimport Nav from \"./components/Nav\";\r\n\r\n\r\nfunction App() {\r\n    const audioRef = useRef<HTMLAudioElement>(null!);\r\n\r\n    const timeUpdateHandler = (event: any) => {\r\n        const currentTime = event.target.currentTime;\r\n        const duration = event.target.duration;\r\n\r\n        const roundedCurrentTime = Math.round(currentTime);\r\n        const roundedDuration = Math.round(duration);\r\n        const animationPercent = Math.round((roundedCurrentTime/roundedDuration) * 100);\r\n\r\n        setSongInfo({ ...songInfo, currentTime, duration, animationPercent });\r\n    };\r\n\r\n    const songEndHandler = async () => {\r\n        let currIndex = songs.findIndex(song => song.id === currentSong.id);\r\n        await setCurrentSong(songs[(currIndex + 1) % songs.length]);\r\n        if (isPlaying)\r\n            await audioRef.current.play();\r\n    }\r\n\r\n    const [isLibraryOpen, setIsLibraryOpen] = useState(false);\r\n    const [songs, setSongs] = useState<SongModel[]>(chillHop());\r\n    const [currentSong, setCurrentSong] = useState<SongModel>(songs[0]);\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    const [songInfo, setSongInfo] = useState<SongInfo>({\r\n        currentTime: 0,\r\n        duration: 0,\r\n        animationPercent: 0\r\n    });\r\n\r\n    return (\r\n        <div className={`App ${isLibraryOpen ? 'library-active' : \"\"}`}>\r\n            <Nav isLibraryOpen={isLibraryOpen} setLibraryOpen={setIsLibraryOpen}/>\r\n            <Song currSong={currentSong}/>\r\n            <Player isPlaying={isPlaying} setIsPlaying={setIsPlaying} currSong={currentSong} audioRef={audioRef.current} songInfo={songInfo} setSongInfo={setSongInfo} songs={songs} setCurrentSong={setCurrentSong} setSongs={setSongs}/>\r\n            <Library songs={songs} setCurrentSong={setCurrentSong} audioRef={audioRef.current} isPlaying={isPlaying} setSongs={setSongs} isLibraryOpen={isLibraryOpen}/>\r\n            <audio onTimeUpdate={timeUpdateHandler} ref={audioRef} onLoadedMetadata={timeUpdateHandler} onEnded={songEndHandler} src={currentSong.audio}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}